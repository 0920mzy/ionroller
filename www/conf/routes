GET      /                                  controllers.Application.index()
GET      /ui/services                       controllers.Application.services
GET      /ui/services/:serviceName           controllers.Application.service(serviceName: String)
POST     /ui/services/:serviceName/release  controllers.Application.release(serviceName: String)
POST     /ui/services/:serviceName/drop     controllers.Application.drop(serviceName: String)

# Generated by apidoc - http://www.apidoc.me
# Service version: 1.0.1
# apidoc:0.9.37 http://www.apidoc.me/gilt/ionroller-api/1.0.1/play_2_x_routes

GET        /services                                     controllers.Services.get()
GET        /services/:serviceName                        controllers.Services.getByServiceName(serviceName: String)
PUT        /services/:serviceName/config                 controllers.Services.putConfigByServiceName(serviceName: String)
GET        /services/:serviceName/configs                controllers.Services.getConfigsByServiceName(serviceName: String, from: _root_.scala.Option[_root_.org.joda.time.DateTime], to: _root_.scala.Option[_root_.org.joda.time.DateTime])
GET        /services/:serviceName/config                 controllers.Services.getConfigByServiceName(serviceName: String)
GET        /services/:serviceName/configs/:timestamp     controllers.Services.getConfigsByServiceNameAndTimestamp(serviceName: String, timestamp: _root_.org.joda.time.DateTime)
DELETE     /services/:serviceName/config                 controllers.Services.deleteConfigByServiceName(serviceName: String)
POST       /services/:serviceName/release                controllers.Services.postReleaseByServiceName(serviceName: String)
POST       /services/:serviceName/drop                   controllers.Services.postDropByServiceName(serviceName: String)
GET        /feed                                         controllers.Events.eventFeed(from: Option[Long] ?= None, to: Option[Long] ?= None, service: Option[String] ?= None, version: Option[String] ?= None)
GET        /events                                       controllers.Events.index
GET        /assets/*file                                 controllers.Assets.at(path="/public", file)
